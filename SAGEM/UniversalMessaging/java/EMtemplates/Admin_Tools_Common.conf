#encoding=UTF-8
# Configuration files must begin with a line specifying the encoding
#  of the the file.

#********************************************************************
# Wrapper License Properties (Ignored by Community Edition)
#********************************************************************

# Include file problems can be debugged by removing the first '#'
#  from the following line:
##include.debug

wrapper.splashscreen.mode=NONE

wrapper.ignore_sequence_gaps=TRUE

#Defaults for when double clicked 
#Edit following security configuration paramemter as per the requirment.
set.default.HPROXY=
set.default.HAUTH=
set.default.LOGLEVEL=4
set.default.KEYSTORE=
set.default.KEYSTOREPASSWD=
set.default.CAKEYSTORE=
set.default.CAKEYSTOREPASSWD=
set.default.PRINCIPAL=%USERNAME%
set.default.PASSWORD=password
set.default.CKEYSTORE=
set.default.CKEYSTOREPASSWD=
set.default.GLOBALSTORECAPACITY=0


# The following property will output information about which License Key(s)
#  are being found, and can aid in resolving any licensing problems.
#wrapper.license.debug=FALSE

#********************************************************************
# Wrapper Java Properties
#********************************************************************
# Java Application
#  Locate the java binary on the system PATH:
wrapper.java.command=$JAVA_EXEC$

# Tell the Wrapper to log the full generated Java command line.
wrapper.java.command.loglevel=NONE
#wrapper.java.command.loglevel=INFO

wrapper.java.mainclass=org.tanukisoftware.wrapper.WrapperSimpleApp  

# Java Library Path (location of Wrapper.DLL or libwrapper.so)
wrapper.java.library.path.1=$WRAPPER_LIB$
wrapper.java.library.path.2=../../../lib


# Java Bits.  On applicable platforms, tells the JVM to run in 32 or 64-bit mode.
wrapper.java.additional.auto_bits=TRUE

# Initial Java Heap Size (in MB)
wrapper.java.initmemory=256

# Maximum Java Heap Size (in MB)
wrapper.java.maxmemory=512

#********************************************************************
# Wrapper Logging Properties
#********************************************************************
# Enables Debug output from the Wrapper.
#wrapper.debug=TRUE

# Format of output for the console.  (See docs for formats)
wrapper.console.format=M

# Log Level for console output.  (See docs for log levels)
wrapper.console.loglevel=INFO
wrapper.console.flush=true

wrapper.adviser=FALSE 

# Format of output for the log file.  (See docs for formats)
wrapper.logfile.format=LPTM

# Log Level for log file output.  (See docs for log levels)
wrapper.logfile.loglevel=NONE

# Maximum size that the log file will be allowed to grow to before
#  the log is rolled. Size is specified in bytes.  The default value
#  of 0, disables log rolling.  May abbreviate with the 'k' (kb) or
#  'm' (mb) suffix.  For example: 10m = 10 megabytes.
wrapper.logfile.maxsize=0

# Maximum number of rolled log files which will be allowed before old
#  files are deleted.  The default value of 0 implies no limit.
wrapper.logfile.maxfiles=0

# Log Level for sys/event log output.  (See docs for log levels)
wrapper.syslog.loglevel=NONE

#********************************************************************
# Wrapper General Properties
#********************************************************************
# Allow for the use of non-contiguous numbered properties
wrapper.ignore_sequence_gaps=TRUE

#********************************************************************
# Wrapper JVM Checks
#********************************************************************
# Detect DeadLocked Threads in the JVM. (Requires Standard Edition)
wrapper.check.deadlock=TRUE
wrapper.check.deadlock.interval=10
wrapper.max_failed_invocations=1
wrapper.disable_restarts=TRUE 

wrapper.console.fatal_to_stderr=FALSE
wrapper.console.error_to_stderr=FALSE 
wrapper.console.warn_to_stderr=FALSE
wrapper.check.deadlock.action=RESTART
wrapper.check.deadlock.output=FULL


# Out Of Memory detection.
# (Simple match)
wrapper.filter.trigger.1000=java.lang.OutOfMemoryError
wrapper.filter.action.1000=RESTART
wrapper.filter.message.1000=The JVM has run out of memory.

