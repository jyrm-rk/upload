# The RuntimeStatusService performas periodic polling for runtime statuses based on registered SPIs.

# There are two strategies:
# 1). fast -   This is the default. Calls SPIs in parallel and constraints the execution time to 
#              spi.maxExecutionTime. The fast polling strategy uses a java.util.concurrent.ThreadPoolExecutor 
#              which can be configured using the properties below.
# 2). simple - Calls SPIs one by one without any misbehavior mitigation.
poll.strategy=fast

# The delay between polling iterations in milliseconds. Don't set to values less than 5000.
poll.period=15000

# The the initial delay after the service is started and before polling begins in milliseconds.
poll.initialDelay=5000

# When the service is started it executes a burst of polling iterations with small delays. The number of 
# burst polling iterations and the delay (in milliseconds) after each iteration can be specified in a 
# comma-separated list.
# By default there are 6 burst polling iterations starting with a small delay and progressing to 
# higher delays. When the burst is over the service continues polling with fixed delay as specified 
# in poll.period
# This capability can be disabled by specifing the keyword "none", e.g. poll.burst.delays=none
poll.burst.delays=2000,2000,3000,4000,6000,10000

# The maximum allowed execution time in milliseconds. No effect for simple polling.
spi.maxExecutionTime=10000

# The core thread pool size for fast polling.
poll.fast.corePoolSize=2

# The maximum thread pool size for fast polling
poll.fast.maxPoolSize=8

# The amount of time in milliseconds before releaseing idle threads for fast polling.
poll.fast.keepAlive=60000
